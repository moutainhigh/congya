<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chauncy.data.mapper.product.PmGoodsMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chauncy.data.domain.po.product.PmGoodsPo">
        <id column="id" property="id"/>
        <result column="goods_category_id" property="goodsCategoryId"/>
        <result column="name" property="name"/>
        <result column="subtitle" property="subtitle"/>
        <result column="icon" property="icon"/>
        <result column="carousel_image" property="carouselImage"/>
        <result column="detail_html" property="detailHtml"/>
        <result column="shipping_template_id" property="shippingTemplateId"/>
        <result column="location" property="location"/>
        <result column="purchase_limit" property="purchaseLimit"/>
        <result column="is_tax" property="isTax"/>
        <result column="activity_cost_rate" property="activityCostRate"/>
        <result column="profits_rate" property="profitsRate"/>
        <result column="generalize_cost_rate" property="generalizeCostRate"/>
        <result column="tax_rate_type" property="taxRateType"/>
        <result column="custom_tax_rate" property="customTaxRate"/>
        <result column="sort" property="sort"/>
        <result column="is_free_postage" property="isFreePostage"/>
        <result column="stock" property="stock"/>
        <result column="low_stock" property="lowStock"/>
        <result column="publish_status" property="publishStatus"/>
        <result column="new_status" property="newStatus"/>
        <result column="recommand_status" property="recommandStatus"/>
        <result column="star_status" property="starStatus"/>
        <result column="verify_status" property="verifyStatus"/>
        <result column="store_id" property="storeId"/>
        <result column="goods_type" property="goodsType"/>
        <result column="spu" property="spu"/>
        <result column="create_by" property="createBy"/>
        <result column="create_time" property="createTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="del_flag" property="delFlag"/>
        <result column="content" property="content"/>
        <result column="is_excel" property="isExcel"/>
        <result column="sales_volume" property="salesVolume"/>
        <result column="collection_num" property="collectionNum"/>
        <result column="forward_num" property="forwardNum"/>
    </resultMap>
    <insert id="addASalesVolume">
        update pm_goods
        set sales_volume=sales_volume+#{salesVolume}
        where id=#{id}
    </insert>

    <select id="findRecommandGoods" resultType="com.chauncy.data.vo.app.goods.GoodsBaseInfoVo">
        SELECT
            `pg`.id AS goodsId,
            `pg`.icon,
            `pgs`.sell_price,
            `pgs`.line_price
        FROM
            pm_goods `pg` ,
            pm_goods_sku `pgs`
        WHERE
            `pg`.id = `pgs`.goods_id
            AND `pg`.store_id = #{storeId}
            AND `pg`.publish_status = 1
            AND recommand_status = 1
            AND `pgs`.id = (
                    SELECT temp.id
                    FROM pm_goods_sku temp
                    WHERE temp.goods_id = pg.id
                    AND temp.del_flag = 0
                    ORDER BY sell_price
                    LIMIT 1  )
        ORDER BY `pg`.sort DESC
        LIMIT 6
    </select>

    <resultMap id="GoodsSecondCategoryResult" type="com.chauncy.data.vo.app.advice.store.GoodsSecondCategoryListVo">
        <id column="categoryId1" property="categoryId"/>
        <result column="categoryName1" property="categoryName"/>
        <!-- collection定义关联集合类型的属性封装规则
        offType:指定集合中的元素类型
        -->
        <collection property="categoryList" ofType="com.chauncy.data.vo.app.advice.store.GoodsThirdCategoryListVo">
            <result column="categoryId" property="categoryId"/>
            <result column="categoryName" property="categoryName"/>
            <result column="goodsSum" property="goodsSum"/>
        </collection>
    </resultMap>
    <select id="findGoodsCategory" resultMap="GoodsSecondCategoryResult">
        SELECT
            pgc1.id AS categoryId1,
            pgc1.name AS categoryName1,
            pgc.`name` AS categoryName,
            pgc.`id` AS categoryId,
            COUNT(pgc.`id`) AS goodsSum
        FROM
            pm_goods pg,
            pm_goods_category pgc ,
            pm_goods_category pgc1
        WHERE
            pg.store_id = #{storeId}
            AND pg.`goods_category_id` = pgc.id
            AND pgc.`parent_id` = pgc1.`id`
            AND pg.`publish_status` = 1
        GROUP BY pgc1.id ,pgc.`id`
    </select>

    <update id="updateStock">
        update pm_goods set stock=stock+#{number} where id=#{goodId}
    </update>

    <update id="shareGoods">
        update pm_goods set forward_num = forward_num+1 where id = #{shareId}
    </update>


    <select id="findGoodsValue" resultType="com.chauncy.data.bo.supplier.good.GoodsValueBo">
        select b.id,b.value as name,b.is_custom
        from pm_goods_rel_attribute_value_sku a ,pm_goods_attribute_value b, pm_goods_attribute c,pm_goods_sku d
        <where>
            a.goods_attribute_value_id = b.id and b.product_attribute_id = c.id and a.del_flag = 0
            and d.id = a.goods_sku_id
            <if test="attributeId !=null">
                and c.id = #{attributeId}
            </if>
            <if test="goodsId !=null">
                and d.goods_id=#{goodsId}
            </if>
        </where>
        GROUP BY b.id
    </select>

    <select id="searchGoodsInfo" resultType="com.chauncy.data.vo.supplier.PmGoodsVo">
        SELECT a.store_id,f.name as storeName,a.id,a.icon,a.NAME as good_name,a.sort,a.sales_volume,a.star_status,a.publish_status,a.verify_status,
        Min(b.supplier_price) AS supplier_price, Min(b.sell_price) AS sell_price,d.name as brandName
        from pm_goods a
        LEFT JOIN pm_goods_sku b on a.id = b.goods_id and b.del_flag = 0
        LEFT JOIN pm_goods_rel_attribute_good c on c.del_flag = 0 and c.goods_good_id = a.id
        inner JOIN pm_goods_attribute d on c.goods_attribute_id = d.id and d.type=8
        inner join pm_goods_category e on e.id = a.goods_category_id
        left join sm_store f on f.id = a.store_id and f.del_flag = 0
        <where>
         <if test="goodName!=null and goodName !=''">
             and a.name like concat('%', #{goodName}, '%')
         </if>
         <if test="categoryName!=null and categoryName!=''">
             and e.name like concat('%', #{categoryName}, '%')
         </if>
         <if test="brandName !=null and brandName!=''">
            and d.name like concat('%', #{brandName}, '%')
         </if>
         <if test="verifyStatus!=null">
            and a.verify_status = #{verifyStatus}
         </if>
         <if test="publishStatus!=null">
            and a.publish_status=#{publishStatus}
         </if>
         <if test="storeName!=null and storeName!=''">
            and f.name like concat('%', #{storeName}, '%')
         </if>
            <if test="storeId!=null">
                and f.id =#{storeId}
            </if>
            <if test="lowestSellPrice!=null">
                and b.sell_price &gt;=#{lowestSellPrice}
            </if>
            <if test="highestSellPrice!=null">
                and b.sell_price &lt;=#{highestSellPrice}
            </if>
            <if test="lowestSupplierPrice!=null">
                and b.supplier_price &gt;=#{lowestSupplierPrice}
            </if>
            <if test="highestSupplierPrice!=null">
                and b.supplier_price &lt;=#{highestSupplierPrice}
            </if>
        </where>
        GROUP BY a.id,d.id order by a.create_time
    </select>


    <select id="searchRelGoodsByInfoId" resultType="com.chauncy.data.vo.supplier.good.InformationRelGoodsVo">
        SELECT mrig.id, pg.id as goodsId, pg.`name`, pg.goods_category_id, Min(pgs.sell_price) AS sell_price,pg.goods_type
        FROM mm_information_rel_goods mrig
             LEFT JOIN pm_goods pg on (pg.id = mrig.goods_id )
             LEFT JOIN pm_goods_sku pgs on (pg.id = pgs.goods_id)
        <where>
                mrig.information_id = #{id}
                AND mrig.del_flag = 0
                and pg.del_flag = 0
                and pgs.del_flag = 0
        </where>
        GROUP BY mrig.id,pg.id
    </select>

    <select id="selectDistributionGoods" resultType="com.chauncy.data.vo.supplier.good.stock.StockTemplateGoodsInfoVo">
        <!--select pg.id, pg.`name`
        from pm_goods_virtual_stock pgvs left join pm_goods pg on pg.id = pgvs.goods_id
        where pgvs.store_id = #{storeId} and pgvs.del_flag = 0 and pg.del_flag = 0
        <if test="null != id">
            AND NOT EXISTS
            (
            SELECT id
            FROM  pm_goods_rel_stock_template pgrst
            WHERE pgrst.`goods_id` = pg.`id`
            AND pgrst.`del_flag` = 0
            AND pgrst.stock_template_id = #{id}
            )
        </if>
        order by pgvs.create_time desc-->
        SELECT
            pg.id AS goodsId,
            pg.icon,
            pg.NAME AS good_name,
            pg.sort,
            pg.sales_volume,
            pg.star_status,
            MIN(pgs.supplier_price) AS supplier_price,
            MIN(pgs.sell_price) AS sell_price,
            SUM(pgs.stock) AS stock,
            pga.`name` AS brandName
        FROM pm_goods_virtual_stock pgvs
        LEFT JOIN pm_goods pg ON pg.id = pgvs.goods_id AND pgvs.store_id = #{storeId}
        LEFT JOIN pm_goods_sku pgs ON pg.id = pgs.goods_id
        LEFT JOIN pm_goods_rel_attribute_good pgrag ON pgrag.goods_good_id = pg.id
        INNER JOIN pm_goods_attribute pga ON pgrag.goods_attribute_id = pga.id
        WHERE pgvs.store_id = #{storeId} AND pgvs.`del_flag` = 0 AND pgs.`del_flag` = 0 AND pgrag.`del_flag` = 0
        AND pga.`del_flag` = 0 AND pga.type=8 AND pg.`del_flag` = 0 and pg.`verify_status` = 3
        <if test="null != id">
            AND NOT EXISTS
            (
            SELECT id
            FROM  pm_goods_rel_stock_template pgrst
            WHERE pgrst.`goods_id` = pg.`id`
            AND pgrst.`del_flag` = 0
            AND pgrst.stock_template_id = #{id}
            )
        </if>
        GROUP BY pg.id, pga.name
        ORDER BY pg.create_time DESC
    </select>

    <select id="selectOwnGoods" resultType="com.chauncy.data.vo.supplier.good.stock.StockTemplateGoodsInfoVo">
        <!--select pg.id, pg.`name`
        from pm_goods pg
        where pg.store_id = #{storeId}  and pg.del_flag = 0
        <if test="null != id">
            AND NOT EXISTS
            (
                SELECT id
                FROM  pm_goods_rel_stock_template pgrst
                WHERE pgrst.`goods_id` = pg.`id`
                AND pgrst.`del_flag` = 0
                AND pgrst.stock_template_id = #{id}
            )
        </if>
        order by pg.create_time desc-->
        SELECT
            pg.id AS goodsId,
            pg.icon,
            pg.NAME AS good_name,
            pg.sort,
            pg.sales_volume,
            pg.star_status,
            MIN(pgs.supplier_price) AS supplier_price,
            MIN(pgs.sell_price) AS sell_price,
            SUM(pgs.stock) AS stock,
            pga.`name` AS brandName
        FROM sm_store ss
        LEFT JOIN pm_goods pg ON ss.id = pg.`store_id` AND ss.id = #{storeId}
        LEFT JOIN pm_goods_sku pgs ON pg.id = pgs.goods_id
        LEFT JOIN pm_goods_rel_attribute_good pgrag ON pgrag.goods_good_id = pg.id
        INNER JOIN pm_goods_attribute pga ON pgrag.goods_attribute_id = pga.id
        WHERE ss.id = #{storeId} AND ss.`enabled` = 1 and pg.`verify_status` = 3 and pg.`del_flag` = 0 AND pga.type=8
        AND pgs.`del_flag` = 0 AND pgrag.`del_flag` = 0 AND pga.`del_flag` = 0
        <if test="null != id">
            AND NOT EXISTS
            (
                SELECT id
                FROM  pm_goods_rel_stock_template pgrst
                WHERE pgrst.`goods_id` = pg.`id`
                AND pgrst.`del_flag` = 0
                AND pgrst.stock_template_id = #{id}
            )
        </if>
        GROUP BY pg.id, pga.name
        ORDER BY pg.create_time desc
    </select>

    <select id="searchStoreGoodsBaseList"
            resultType="com.chauncy.data.vo.app.advice.goods.SearchGoodsBaseListVo">
        SELECT
            pg.id AS goods_id ,
            pg.name AS goods_name,
            pg.icon AS picture,
            pg.`activity_cost_rate`,
            pg.`profits_rate`,
            pg.`sales_volume`,
            pg.`forward_num`,
            pg.`collection_num`,
            pgs.sell_price,
            pgs.`line_price`
        FROM
            sm_store ss
            left join pm_goods pg on pg.store_id = ss.id
            <if test="null != goodsType and goodsType == 6 ">
                left join pm_goods_category pgc on pgc.id = pg.goods_category_id
            </if>
            left join pm_goods_sku pgs on pgs.goods_id = pg.id
        <where>
            <if test="null != storeId">
                ss.id = #{storeId}
            </if>
            AND pg.`del_flag` = 0
            AND pg.`publish_status` = 1
            AND pgs.`del_flag` = 0
            AND pgs.id =(
                SELECT id
                FROM pm_goods_sku temp
                WHERE temp.`goods_id` = pg.id AND temp.`del_flag` = 0
                ORDER BY temp.`sell_price`
                LIMIT 1
            )
            <if test="null != goodsType and goodsType == 6 ">
                AND pgc.id = #{goodsCategoryId}
                AND pgc.del_flag = 0
            </if>
            <if test="null != goodsName and goodsName != '' ">
                AND pg.name like concat('%', #{goodsName}, '%')
            </if>
            <if test="null != goodsType and goodsType == 3  ">
                AND DATEDIFF(now(), pg.update_time)  <![CDATA[<= ]]>   #{newGoodsDays}
            </if>
            <if test="null != goodsType and goodsType == 3 ">
                AND (pg.recommand_status = 1 OR pg.star_status = 1)
            </if>
            <if test="lowestPrice !=null ">
                AND pgs.sell_price <![CDATA[>= ]]> #{lowestPrice}
            </if>
            <if test="highestPrice !=null ">
                AND pgs.sell_price<![CDATA[<= ]]> #{highestPrice}
            </if>
        </where>
        <if test="sortFile.name() == 'PRICE_SORT' ">
            ORDER BY pgs.sell_price ${sortWay.name}
        </if>
        <if test="sortFile.name() == 'SALES_SORT'">
            ORDER BY pg.sales_volume ${sortWay.name}
        </if>
        <if test="sortFile.name() == 'COLLECTION_NUM'">
            ORDER BY pg.collection_num ${sortWay.name}
        </if>
    </select>

    <select id="searchGoodsInfoByTemplateId" resultType="com.chauncy.data.vo.supplier.good.stock.StockTemplateGoodsInfoVo">
        SELECT pgrst.id as relId , pg.id as goodsId,pg.icon,pg.NAME as good_name,pg.sort,pg.sales_volume,pg.star_status,
        Min(pgs.supplier_price) AS supplier_price, Min(pgs.sell_price) AS sell_price,pga.`name` as brandName
        from pm_goods_rel_stock_template pgrst
        left join pm_goods pg on pg.id = pgrst.goods_id and pg.del_flag = 0
        LEFT JOIN pm_goods_sku pgs on pg.id = pgs.goods_id
        LEFT JOIN pm_goods_rel_attribute_good pgrag on pgrag.del_flag = 0 and pgrag.goods_good_id = pg.id
        inner JOIN pm_goods_attribute pga on pgrag.goods_attribute_id = pga.id and pga.type=8
        inner join pm_goods_category pgc on pgc.id = pg.goods_category_id
        left join sm_store ss on ss.id = pg.store_id and ss.del_flag = 0
        <where>
            pgrst.stock_template_id = #{id}
        </where>
        group by pgrst.id,pga.id
    </select>

    <select id="searchInfoBasePaging" resultType="com.chauncy.data.vo.app.goods.GoodsBaseInfoVo">
        SELECT
                pg.store_id,
                pg.id AS goodsId,
                pg.`name` AS goodsName,
                MIN(pgs.sell_price) AS sellPrice,
                MIN(pgs.line_price) AS linePrice,
                SUM(pgs.`sales_volume`) AS salesVolume,
                pg.icon
        FROM pm_goods pg
        LEFT JOIN pm_goods_sku pgs ON pgs.goods_id = pg.id
        <if test="goodsCategoryId != null">
            LEFT JOIN pm_goods_category pgc3 ON pgc3.id = pg.goods_category_id
	        LEFT JOIN pm_goods_category pgc2 ON pgc2.id = pgc3.parent_id AND pgc3.del_flag = 0
	        LEFT JOIN pm_goods_category pgc1 ON pgc1.id = pgc2.parent_id AND pgc2.del_flag = 0
        </if>
	    <where>
            pg.store_id = #{storeId}
            AND pg.verify_status = 3
            AND pg.del_flag = 0
            AND pgs.del_flag = 0
            <if test="goodsCategoryId != null">
                AND pgc1.id = #{goodsCategoryId}
                AND pgc1.del_flag = 0
            </if>
            <if test="null != goodsType and goodsType == 3 ">
                AND DATEDIFF(now(), pg.update_time)  <![CDATA[>= ]]>   #{newGoodsDays}
            </if>
            <if test="null != goodsType and goodsType == 4  ">
                AND pg.recommand_status = 1
            </if>
            <if test="null != goodsType and goodsType == 4   ">
                AND pg.star_status = 1
            </if>
        </where>
        GROUP BY pg.id
        <if test="sortFileEnum.name() == 'COMPREHENSIVE_SORT'">
            ORDER BY salesVolume*5 ${sortFileEnum.name()}
        </if>
        <if test="sortFileEnum.name() == 'SALES_SORT'">
            ORDER BY pg.`sales_volume` ${sortFileEnum.name()}
        </if>
        <if test="sortFileEnum.name() == 'PRICE_SORT'">
            ORDER BY sellPrice ${sortFileEnum.name()}
        </if>
        <if test="null != goodsType and goodsType == 4 ">
            ORDER BY pg.sort desc
        </if>
        <if test="null != goodsType and goodsType == 3 ">
            ORDER BY pg.update_time desc
        </if>
    </select>

    <select id="searchGoodsByInfoId" resultType="com.chauncy.data.vo.app.goods.GoodsBaseInfoVo">
        SELECT
                pg.store_id,
                pg.id AS goodsId,
                pg.`name` AS goodsName,
                MIN(pgs.sell_price) AS sellPrice,
                MIN(pgs.line_price) AS linePrice,
                pg.icon
        FROM mm_information_rel_goods mirg
        LEFT JOIN pm_goods pg
        ON mirg.`goods_id` = pg.`id` AND mirg.`information_id` = #{mmInformationId} AND mirg.`del_flag` = 0
        LEFT JOIN pm_goods_sku pgs
        ON pgs.goods_id = pg.id
        <where>
            mirg.`information_id` = #{mmInformationId}
            AND pg.verify_status = 3
            AND pg.del_flag = 0
            AND pgs.del_flag = 0
        </where>
        GROUP BY pg.id
        ORDER BY pg.update_time DESC
    </select>

    <select id="searchExcelGoods" resultType="com.chauncy.data.vo.supplier.good.ExcelGoodVo">
        select id,name,create_time import_time
        from pm_goods where is_excel=true
        and del_flag=0
        <if test="id!=null and id!=0">
            and id=#{id}
        </if>
        <if test="name!=null and name!=''">
            and name like concat('%', #{name}, '%')
        </if>
        and store_id=#{storeId}

    </select>
    <select id="selectIds" resultType="com.chauncy.data.vo.BaseVo">
        select id,name
        from pm_goods
        where id in
        <foreach item="item" collection="idList" separator="," open="(" close=")" index="">  #{item}
        </foreach>
        <if test="id!=null">
            and id = #{id}
        </if>
        <if test="name!=null and name!=''">
            and name like concat('%', #{name}, '%')
        </if>
    </select>
    <select id="searchAssociatedGoods"
            resultType="com.chauncy.data.vo.supplier.activity.SearchAssociatedGoodsVo">
        select DISTINCT a.icon,a.id as goods_id,a.name as goods_name,c.name as brand_name
        from pm_goods a,am_activity_rel_activity_category b,pm_goods_attribute c,pm_goods_rel_attribute_good d
        where b.activity_id = #{activityId} and b.del_flag= 0 and a.del_flag =0 and c.del_flag = 0 and d.del_flag = 0 and
			a.store_id = #{storeId} and b.category_id	= a.goods_category_id and c.type = 8 and c.id = d.goods_attribute_id
			and d.goods_good_id = a.id and a.goods_category_id in
        <foreach item="item" collection="categoryIds" separator="," open="(" close=")" index="">  #{item}
        </foreach>
        <if test="t.goodsId != null">
            and a.id = #{t.goodsId}
        </if>
        <if test="t.goodsName != null and t.goodsName != ''">
            and a.name like concat('%', #{t.goodsName} ,'%')
        </if>
        <if test="t.brandName != null and t.brandName != ''">
            and c.name like concat('%', #{t.brandName} ,'%')
        </if>
    </select>
    <select id="storeRecommendGoods" resultType="com.chauncy.data.vo.supplier.good.RecommendGoodsVo">
            SELECT pg.`id` as goodsId,
                pg.`name`,
                CONCAT(pgc1.`name`,'/',pgc2.`name`,'/',pgc3.`name`) AS categoryName,
                '满减' AS goodsType,
                MIN(pgs.sell_price) AS sell_price
            FROM pm_goods pg LEFT JOIN pm_goods_sku pgs ON pg.id = pgs.goods_id,
                pm_goods_category pgc3,
                pm_goods_category pgc2,
                pm_goods_category pgc1
            <where>
                pg.`store_id` = #{storeId}
                AND pg.verify_status = 3
                AND pg.`recommand_status` = 1
                <if test="goodsCategoryId != null">
                    AND pg.goods_category_id = #{goodsCategoryId}
                </if>
                AND pg.`goods_category_id` = pgc3.id
                AND pgc3.`parent_id` = pgc2.`id`
                AND pgc2.`parent_id` = pgc1.`id`
                <if test="informationId != null and informationId != 0">
                    AND pg.id NOT IN (
                        SELECT mirg.goods_id
                        FROM mm_information_rel_goods mirg
                        WHERE mirg.information_id = #{informationId}
                        AND mirg.del_flag = 0)
                </if>
                <if test="goodsName != null and goodsName != ''">
                    AND pg.name like concat('%', #{goodsName} ,'%')
                </if>
            </where>
            GROUP BY pg.id
    </select>
    <select id="searchTabNeedGoods" resultType="com.chauncy.data.vo.manage.message.advice.tab.tab.SearchAdviceGoodsVo">
        select id,name,goods_category_id
        from pm_goods
        where del_flag = 0
        <if test="name!=null and name!=''">
            and name like concat('%', #{name}, '%')
        </if>
        <if test="categoryId!=null and categoryId!=''">
            and goods_category_id = #{categoryId}
        </if>
    </select>
    <select id="findGoodsBase" resultType="com.chauncy.data.vo.app.goods.SpecifiedGoodsVo">
        select a.id as goods_id,a.name as goods_name,a.subtitle,a.carousel_image,a.is_free_postage,
        a.location as origin_place,a.sales_volume,a.goods_category_id as category_id,a.collection_num
        a.carousel_image,a.tax_rate_type ,b.default_freight,b.default_full_money,b.default_post_money,
        b.default_max_number,b.default_max_number_money,b.default_addtional_freight,b.default_addtional_number
        from pm_goods a,pm_shipping_template b
        where a.shipping_template_id = b.id and a.id = #{goodsId}

    </select>


</mapper>
