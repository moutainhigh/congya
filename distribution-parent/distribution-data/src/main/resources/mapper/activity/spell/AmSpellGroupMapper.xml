<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chauncy.data.mapper.activity.spell.AmSpellGroupMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chauncy.data.domain.po.activity.spell.AmSpellGroupPo">
        <id column="id" property="id" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
        <result column="del_flag" property="delFlag" />
        <result column="name" property="name" />
        <result column="sort" property="sort" />
        <result column="picture" property="picture" />
        <result column="member_level_id" property="memberLevelId" />
        <result column="registration_start_time" property="registrationStartTime" />
        <result column="registration_end_time" property="registrationEndTime" />
        <result column="activity_start_time" property="activityStartTime" />
        <result column="activity_end_time" property="activityEndTime" />
        <result column="activity_ description" property="activityDescription" />
        <result column="group_num" property="groupNum" />
        <result column="discount_price_ratio" property="discountPriceRatio" />
        <result column="enable" property="enable" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, create_by, create_time, update_by, update_time, del_flag, name, sort, picture, member_level_id, registration_start_time, registration_end_time, activity_start_time, activity_end_time, activity_description, group_num, discount_price_ratio, enable
    </sql>


    <select id="getSpellGroupDetail" resultType="com.chauncy.data.vo.app.activity.spell.SpellGroupDetailVo">
        SELECT asgm.id AS relId,
            (
                SELECT GROUP_CONCAT(uu.photo)
                FROM am_spell_group_member temp
                INNER JOIN um_user uu ON temp.user_id = uu.id AND  temp.group_main_id = #{mainId}
                WHERE pay_status = 1
                ORDER BY temp.create_time ASC LIMIT 5
            ) AS headPortraits,
            asgm1.`status` AS mainStatus,
            asgm.`order_id`
        FROM am_spell_group_member asgm
        INNER JOIN am_spell_group_main asgm1 ON asgm.`group_main_id` = asgm1.`id`
        WHERE asgm.id = #{relId}
    </select>

    <select id="searchMySpellGroup" resultType="com.chauncy.data.vo.app.activity.spell.MySpellGroupVo">
        SELECT asgm.id AS mainId,
            asgm.payed_num,
            pg.id AS goodsId,
            pg.`name` AS goodsName,
            pg.icon, asgm.status AS mainStatus,
            asgm1.order_id,
            asgm1.id AS relId,
            oo.status AS orderStatus
        FROM am_spell_group_main asgm
        INNER JOIN am_activity_rel_activity_goods aarag ON aarag.id = asgm.rel_id
        INNER JOIN pm_goods pg ON pg.id = aarag.goods_id
        INNER JOIN am_spell_group_member asgm1 ON asgm1.group_main_id = asgm.id AND asgm1.pay_status = 1
        LEFT JOIN om_order oo ON oo.id = asgm1.order_id
        <where>
            asgm1.user_id = #{userId}
            <if test="null != mySpellGroupType and mySpellGroupType == 1">
                AND asgm1.is_head = 1
            </if>
            <if test="null != mySpellGroupType and mySpellGroupType == 2">
                AND asgm1.is_head = 0
            </if>
        </where>
        ORDER BY asgm.create_time DESC
    </select>

    <select id="searchSpellGroupInfo" resultType="com.chauncy.data.vo.app.activity.spell.SpellGroupInfoVo">
        SELECT asgm.id,
            asgm.expire_time,
            (asgm.condition_num - asgm.payed_num) AS margin,
            uu.photo AS headPortrait,
            uu.name as userName
        FROM am_spell_group_main asgm
        INNER JOIN am_spell_group_member asgm1 ON asgm.id = asgm1.group_main_id AND asgm1.is_head = 1
        INNER JOIN um_user uu ON uu.id = asgm1.user_id
        WHERE asgm.status = 2
        AND asgm.rel_id = #{relId}
    </select>

    <select id="findGoodsCategory" resultType="com.chauncy.data.vo.BaseVo">
        WITH RECURSIVE parentIds (id,parent_id, `name`, `level`) AS
        (
            SELECT DISTINCT pgc.`id`, pgc.parent_id, pgc.name, pgc.`level`
            FROM am_activity_rel_activity_goods aarag
            INNER JOIN pm_goods pg ON aarag.`goods_id` = pg.`id`
            INNER JOIN pm_goods_category pgc ON pg.goods_category_id = pgc.id
            <where>
                aarag.`activity_start_time` <![CDATA[< ]]>  NOW()
                AND aarag.`activity_end_time` <![CDATA[> ]]>  NOW()
                AND aarag.`verify_status` = 3
                AND aarag.`activity_type` = 4
                AND aarag.`del_flag` = 0
                AND pg.`publish_status` = 1
            </where>
            UNION ALL
            SELECT pgc.id,pgc.parent_id,pgc.name, pgc.level
            FROM parentIds AS temp
            LEFT JOIN  pm_goods_category  AS pgc
            ON temp.parent_id = pgc.id
            WHERE pgc.del_flag=0
        )
        SELECT DISTINCT id,`name` FROM parentIds WHERE `level` = 1
    </select>

    <select id="getMemberHeadPortrait" resultType="java.lang.String">
        SELECT uu.photo
        FROM am_spell_group_member asgm
        INNER JOIN um_user uu ON uu.id = asgm.user_id
        <where>
            asgm.group_main_id = #{mainId}
            and pay_status = 1
        </where>
        ORDER BY asgm.create_time ASC
        LIMIT ${spellHeadPortrait}
    </select>

    <select id="getMainHeadPortrait" resultType="java.lang.String">
        SELECT uu.photo
        FROM am_spell_group_member asgm
        INNER JOIN um_user uu
        ON uu.id = asgm.user_id
        WHERE FIND_IN_SET(asgm.group_main_id, #{mainIds} ) AND asgm.is_head = 1
    </select>

    <select id="searchActivityGoodsList" resultType="com.chauncy.data.vo.app.goods.SpellGroupGoodsVo">
        SELECT pg.id AS goodsId,
            pg.`name` AS goodsName,
            MIN(aargs.activity_price) AS sellPrice,
            pg.`icon`,
            SUM(asgm.payed_num) AS payedNum,
            GROUP_CONCAT(asgm.id) as mainIds
        FROM am_activity_rel_activity_goods aarag
        INNER JOIN pm_goods pg ON aarag.`goods_id` = pg.`id`
        <if test="null != categoryId and categoryId != 0">
            INNER JOIN pm_goods_category pgc ON pgc.id = pg.goods_category_id
            INNER JOIN pm_goods_category pgc1 ON pgc1.id = pgc.parent_id
        </if>
        INNER JOIN am_activity_rel_goods_sku aargs ON aarag.id = aargs.rel_id
        LEFT JOIN am_spell_group_main asgm ON asgm.`rel_id` = aarag.`id` AND asgm.rel_id = 1 AND asgm.status BETWEEN 2 AND 3
        <where>
            aarag.`activity_start_time` <![CDATA[< ]]>  NOW()
            AND aarag.`activity_end_time` <![CDATA[> ]]>  NOW()
            AND aarag.`verify_status` = 3
            AND aarag.`activity_type` = 4
            AND aarag.`del_flag` = 0
            <if test="null != categoryId and categoryId != 0">
                AND pgc1.parent_id = #{categoryId}
            </if>
            AND pg.`publish_status` = 1
            AND aargs.del_flag = 0
        </where>
        GROUP BY pg.`id`
        <if test="null != sortFile and sortFile.name() == 'PRICE_SORT' ">
            ORDER BY pgs.sell_price ${sortWay.name}
        </if>
        <if test="null != sortFile and sortFile.name() == 'SALES_SORT'">
            ORDER BY pg.sales_volume ${sortWay.name}
        </if>
        <if test="null != sortFile and sortFile.name() == 'COMPREHENSIVE_SORT'">
            ORDER BY pg.comprehensive_score DESC
        </if>
    </select>

    <select id="searchSpellList" resultType="com.chauncy.data.vo.manage.activity.SearchActivityListVo">
        select a.*,c.level_name as member_name
        from am_spell_group a,pm_member_level c
        where a.del_flag = 0 and a.member_level_id = c.id
        <if test="id != null">
            and a.id = #{id}
        </if>
        <if test="name != null and name != ''">
            and a.name like concat('%', #{name} ,'%')
        </if>
        <if test="activityStatus != null">
            <if test="activityStatus == 1">
                and a.activity_start_time &gt; now()
            </if>
            <if test="activityStatus == 2">
                and a.activity_start_time &lt;= now() and now() &gt;= a.activity_end_time
            </if>
            <if test="activityStatus == 4">
                and now() &lt; a.activity_end_time
            </if>
        </if>
        <if test="registrationStatus != null">
            <if test="registrationStatus == 1">
                and a.registration_start_time &gt; now()
            </if>
            <if test="registrationStatus == 3">
                and a.registration_start_time &lt;= now() and now() &gt;= a.registration_end_time
            </if>
            <if test="registrationStatus == 4">
                and a.registration_start_time &gt; now()
            </if>
        </if>
        <if test="activityStartTime != null">
            and activity_start_time &gt;= #{activityStartTime}
        </if>
        <if test="activityEndTime != null">
            and activity_end_time &lt;= #{activityEndTime}
        </if>
        <if test="registrationStartTime != null">
            and registration_start_time &gt;= #{registrationStartTime}
        </if>
        <if test="registrationEndTime != null">
            and registration_end_time &lt;= #{registrationEndTime}
        </if>
        <if test="groupId != null">
            and group_id = #{groupId}
        </if>
        <if test="title != null and title != ''">
            and title like concat('%', #{title} ,'%')
        </if>
        <if test="subtitle != null and subtitle != ''">
            and subtitle like concat('%', #{subtitle} ,'%')
        </if>

    </select>
    <select id="findSpellGroupById" resultType="com.chauncy.data.vo.manage.activity.SearchActivityListVo">
        select <include refid="Base_Column_List"></include>
        ,( CASE WHEN ( now( ) &lt; registration_start_time ) THEN '待开始' WHEN ( now( ) &gt; registration_end_time ) THEN '已结束' ELSE '报名中' END ) AS registration_status,
        ( CASE WHEN ( now( ) &lt; activity_start_time ) THEN '待开始' WHEN ( now( ) &gt; activity_end_time ) THEN '已结束' ELSE '活动中' END ) AS activity_status
        from am_spell_group
        where id = #{id}

    </select>
    <select id="findTodaySpell" resultType="com.chauncy.data.vo.app.goods.SpellGroupGoodsVo">

        SELECT pg.id AS goodsId,
        pg.`name` AS goodsName,
        MIN(aargs.activity_price) AS sellPrice,
        pg.`icon`,
        SUM(asgm.payed_num) AS payedNum,
        GROUP_CONCAT(asgm.id) as mainIds
        FROM mm_advice_rel_spell_goods marsg
        INNER JOIN am_activity_rel_activity_goods aarag on aarag.goods_id = marsg.goods_id
        INNER JOIN pm_goods pg ON aarag.`goods_id` = pg.`id`
        INNER JOIN am_activity_rel_goods_sku aargs ON aarag.id = aargs.rel_id
        LEFT JOIN am_spell_group_main asgm ON asgm.`rel_id` = aarag.`id` AND asgm.rel_id = 1 AND asgm.status BETWEEN 2 AND 3
        where
        aarag.`activity_start_time` &lt;=  NOW()
        AND aarag.`activity_end_time` &gt;=  NOW()
        AND aarag.`verify_status` = 3
        AND aarag.`activity_type` = 4
        AND aarag.`del_flag` = 0
        AND pg.`publish_status` = 1
        AND aargs.del_flag = 0
        AND marsg.advice_id = #{adviceId}
        GROUP BY pg.`id`
        ORDER BY pg.sales_volume desc
        limit 3;

    </select>

    <select id="searchTodaySpellGoods" resultType="com.chauncy.data.vo.app.goods.SpellGroupGoodsVo">
        SELECT pg.id AS goodsId,
        pg.`name` AS goodsName,
        MIN(aargs.activity_price) AS sellPrice,
        pg.`icon`,
        SUM(asgm.payed_num) AS payedNum,
        GROUP_CONCAT(asgm.id) as mainIds
        FROM mm_advice_rel_spell_goods marsg
        INNER JOIN am_activity_rel_activity_goods aarag on aarag.goods_id = marsg.goods_id
        INNER JOIN pm_goods pg ON aarag.`goods_id` = pg.`id`
        <if test="null != categoryId and categoryId != 0">
            INNER JOIN pm_goods_category pgc ON pgc.id = pg.goods_category_id
            INNER JOIN pm_goods_category pgc1 ON pgc1.id = pgc.parent_id
        </if>
        INNER JOIN am_activity_rel_goods_sku aargs ON aarag.id = aargs.rel_id
        LEFT JOIN am_spell_group_main asgm ON asgm.`rel_id` = aarag.`id` AND asgm.rel_id = 1 AND asgm.status BETWEEN 2 AND 3
        <where>
            aarag.`activity_start_time` <![CDATA[< ]]>  NOW()
            AND aarag.`activity_end_time` <![CDATA[> ]]>  NOW()
            AND aarag.`verify_status` = 3
            AND aarag.`activity_type` = 4
            AND aarag.`del_flag` = 0
            <if test="null != categoryId and categoryId != 0">
                AND pgc1.parent_id = #{categoryId}
            </if>
            AND pg.`publish_status` = 1
            AND aargs.del_flag = 0
            AND marsg.advice_id = #{adviceId}
        </where>
        GROUP BY pg.`id`
        <if test="null != sortFile and sortFile.name() == 'PRICE_SORT' ">
            ORDER BY pgs.sell_price ${sortWay.name}
        </if>
        <if test="null != sortFile and sortFile.name() == 'SALES_SORT'">
            ORDER BY pg.sales_volume ${sortWay.name}
        </if>
        <if test="null != sortFile and sortFile.name() == 'COMPREHENSIVE_SORT'">
            ORDER BY pg.comprehensive_score DESC
        </if>
    </select>

</mapper>
