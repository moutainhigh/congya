<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chauncy.data.mapper.IBaseMapper">


    <select id="findByUserName" resultType="map" parameterType="string">
      select id as 'id', name as '名字', age as '年龄', salary as '薪水' from tb_user where name = #{username}
    </select>

    <select id="loadChildIds" resultType="java.lang.Long">
        WITH RECURSIVE childrenIds (id) AS
        (
        SELECT id
        FROM ${tableName}
        WHERE
            del_flag=0 and
        <choose>
            <when test="parentId==null">
                parent_id is null
            </when>
            <otherwise>
                id=#{parentId}
            </otherwise>
        </choose>
        UNION ALL
        SELECT c.id
        FROM childrenIds AS p JOIN ${tableName} AS c
        ON p.id = c.parent_id
        where c.del_flag=0
        )
        SELECT id FROM childrenIds

    </select>

    <select id="loadParentIds" resultType="java.lang.Long">
       WITH RECURSIVE parentIds (id,parent_id) AS
        (
        SELECT id,parent_id
        FROM  ${tableName}
        WHERE
            del_flag=0 and
                id=#{id}
        UNION ALL
        SELECT c.id,c.parent_id
        FROM parentIds AS p left JOIN  ${tableName}  AS c
        ON p.parent_id = c.id
        where c.del_flag=0
        )
        SELECT id FROM parentIds
    </select>

    <select id="countById" resultType="java.lang.Integer">
        select count(1) from ${tableName} where
        del_flag=0 and
        ${field}=#{value}
        <if test="concatWhereSql!=null">
            ${concatWhereSql}
        </if>
    </select>
    <select id="loadIdByNamesInAndTableName" resultType="java.lang.Long">
        select id from ${tableName} where  name in
        <foreach collection="names" item="name" separator="," open="(" close=")">
            #{name}
        </foreach>
        and del_flag=0
        ${concatWhereSql}
    </select>

    <select id="findGoodsBaseByCondition" resultType="com.chauncy.data.vo.manage.common.goods.GoodsBaseVo">
        select a.id as goods_id,a.name as goods_name,b.id as category_id
        from pm_goods as a,pm_goods_category b
        <where>
            a.del_flag = 0 and b.del_flag=0 and a.goods_category_id = b.id and b.`level`=3
            <if test="goodsId != null">
                and a.id = #{goodsId}
            </if>
            <if test="goodsName != null and goodsName != '' ">
                and a.name like concat('%', #{goodsName}, '%')
            </if>
            <if test="categoryId != null">
                and b.id = #{categoryId}
            </if>
            <if test="categoryName != null and categoryName != '' ">
                and b.name like concat('%', #{categoryName}, '%')
            </if>
        </where>

    </select>

</mapper>