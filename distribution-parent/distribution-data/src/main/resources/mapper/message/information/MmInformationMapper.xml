<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chauncy.data.mapper.message.information.MmInformationMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chauncy.data.domain.po.message.information.MmInformationPo">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="author" property="author" />
        <result column="enabled" property="enabled" />
        <result column="info_label_id" property="infoLabelId" />
        <result column="info_category_id" property="infoCategoryId" />
        <result column="store_id" property="storeId" />
        <result column="sort" property="sort" />
        <result column="cover_image" property="coverImage" />
        <result column="pure_text" property="pureText" />
        <result column="detail_html" property="detailHtml" />
        <result column="verify_status" property="verifyStatus" />
        <result column="browsing_num" property="browsingNum" />
        <result column="forward_num" property="forwardNum" />
        <result column="comment_num" property="commentNum" />
        <result column="liked_num" property="likedNum" />
        <result column="collection_num" property="collectionNum" />
        <result column="remark" property="remark" />
        <result column="verify_time" property="verifyTime" />
        <result column="verify_by" property="verifyBy" />
        <result column="create_time" property="createTime" />
        <result column="create_by" property="createBy" />
        <result column="update_time" property="updateTime" />
        <result column="update_by" property="updateBy" />
        <result column="del_flag" property="delFlag" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, title, author, enabled, info_label_id, info_category_id, store_id, sort, cover_image, pure_text, detail_html, verify_status, browsing_num, forward_num, comment_num, liked_num, collection_num, remark, verify_time, verify_by, create_time, create_by, update_time, update_by, del_flag
    </sql>
    <update id="shareInformation">
        update mm_information set forward_num = forward_num+1 where id = #{shareId}
    </update>


    <select id="findById" resultType="com.chauncy.data.vo.manage.message.information.InformationVo">
        select mi.*, mil.`name` as infoLabelName, mic.`name` as infoCategoryName
        from mm_information mi left join mm_information_label mil on (mi.info_label_id = mil.id and mil.del_flag = 0)
            left join mm_information_category mic on (mi.info_category_id = mic.id and mic.del_flag = 0)
        where mi.id = #{id}
    </select>




    <resultMap id="informationBaseResult" type="com.chauncy.data.vo.app.message.information.InformationBaseVo">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="detail_html" property="detailHtml" />
        <result column="cover_image" property="coverImage" />
        <result column="forward_num" property="forwardNum" />
        <result column="isForward" property="isForward" />
        <result column="comment_num" property="commentNum" />
        <result column="isComment" property="isComment" />
        <result column="liked_num" property="likedNum" />
        <result column="isLiked" property="isLiked" />
        <result column="collection_num" property="collectionNum" />
        <result column="isCollection" property="isCollection" />
        <result column="update_time" property="updateTime" />
        <!-- collection定义关联集合类型的属性封装规则
        offType:指定集合中的元素类型
        -->
        <collection property="informationStoreInfo" ofType="com.chauncy.data.vo.app.message.information.InformationStoreInfoVo">
            <id column="storeId" property="storeId"/>
            <result column="logo_image" property="logoImage"/>
            <result column="storeName" property="storeName"/>
            <result column="is_focus" property="isFocus"/>
            <result column="store_describe" property="storeDescribe"/>
        </collection>
    </resultMap>
    <select id="findBaseById" resultMap="informationBaseResult">
        SELECT
            mi.id,
            mi.title,
            mi.detail_html,
            mi.`cover_image`,
            mi.`forward_num`,
            mi.`comment_num`,
            mi.`liked_num`,
            mi.`collection_num`,
            mi.update_time,
            ss.`id` AS storeId,
            ss.name AS storeName,
            ss.`logo_image`,
            ss.store_describe,
            (EXISTS
                (SELECT 1
                FROM um_user_favorites uuf
                WHERE uuf.favorites_id = ss.id
                AND uuf.`type` = '店铺'
                AND uuf.user_id = #{userId}
                AND uuf.is_favorites = 1
                AND uuf.del_flag = 0)
            ) AS is_focus,
            (EXISTS
                (SELECT 1
                FROM um_user_favorites uuf
                WHERE uuf.favorites_id = mi.id
                AND uuf.`type` = '资讯'
                AND uuf.user_id = #{userId}
                AND uuf.is_favorites = 1
                AND uuf.del_flag = 0)
            ) AS isCollection,
            (EXISTS
                (SELECT 1
                FROM mm_information_comment mic
                WHERE mic.info_id = mi.id
                AND mic.user_id = #{userId}
                )
            ) as isComment,
            (EXISTS
                (SELECT 1
                FROM mm_information_liked mil
                WHERE mil.info_id = mi.id
                AND mil.user_id = #{userId}
                AND mil.del_flag = 0
                )
            ) as isLiked,
            (EXISTS
                (SELECT 1
                FROM mm_information_forward mif
                WHERE mif.info_id = mi.id
                AND mif.user_id = #{userId}
                )
            ) as isForward
        FROM mm_information mi LEFT JOIN sm_store ss ON mi.`store_id` = ss.id
        WHERE mi.id = #{mmInformationId} AND mi.del_flag = 0
    </select>


    <select id="searchInfoPaging" resultType="com.chauncy.data.vo.manage.message.information.InformationPageInfoVo">
        select mi.id,
            mi.title,
            mi.enabled,
            mi.sort,
            mi.verify_status,
            mi.update_time,
            mi.browsing_num,
            mi.forward_num,
            mi.comment_num,
            mi.liked_num,
            mi.collection_num,
            mil.name as infoLabelName,
            mic.name as infoCategoryName
        from mm_information mi
        left join mm_information_label mil on mil.id = mi.info_label_id
        left join mm_information_category mic on mic.id = mi.info_category_id
        <where>
            mi.del_flag = 0
            and mil.del_flag = 0
            and mil.del_flag = 0
            <if test="storeId != null">
                and mi.store_id = #{storeId}
            </if>
            <if test="id != null">
                and mi.id = #{id}
            </if>
            <if test="startTime != null">
                and date(mi.create_time) <![CDATA[>= ]]>  #{startTime}
            </if>
            <if test="endTime != null">
                and date(mi.create_time) <![CDATA[<= ]]> #{endTime}
            </if>
            <if test="name != null and name !=''">
                and mi.title like concat('%', #{name}, '%')
            </if>
        </where>
        order by mi.sort desc
    </select>


    <resultMap id="informationPagingResult" type="com.chauncy.data.vo.app.message.information.InformationPagingVo">
        <id column="id" property="id" />
        <result column="title" property="title" />
        <result column="cover_image" property="coverImage" />
        <result column="pure_text" property="pureText" />
        <result column="forward_num" property="forwardNum" />
        <result column="isForward" property="isForward" />
        <result column="comment_num" property="commentNum" />
        <result column="isComment" property="isComment" />
        <result column="liked_num" property="likedNum" />
        <result column="isLiked" property="isLiked" />
        <result column="update_time" property="updateTime" />
        <!-- collection定义关联集合类型的属性封装规则
        offType:指定集合中的元素类型
        -->
        <collection property="informationStoreInfo" ofType="com.chauncy.data.vo.app.message.information.InformationStoreInfoVo">
            <id column="storeId" property="storeId"/>
            <result column="logo_image" property="logoImage"/>
            <result column="storeName" property="storeName"/>
            <result column="storeLabels" property="storeLabels"/>
            <result column="collection_num" property="collectionNum"/>
            <result column="likedSum" property="likedSum"/>
            <result column="is_focus" property="isFocus"/>
        </collection>
    </resultMap>
    <select id="searchInfoBasePaging" resultMap="informationPagingResult">
        select mi.id,
            mi.title,
            LEFT(mi.pure_text,100) AS pureText ,
            mi.`cover_image`,
            mi.`forward_num`,
            mi.`comment_num`,
            mi.`liked_num`,
            mi.update_time,
            ss.`id` AS storeId,
            ss.`logo_image`,
            ss.`name` AS storeName,
            (
                SELECT GROUP_CONCAT(`ssl`.name)
                FROM sm_store_label `ssl` ,sm_store_rel_label ssrl
                WHERE `ssrl`.store_label_id = `ssl`.id
                AND `ssrl`.store_id = ss.`id`
                AND `ssl`.del_flag = 0
            ) AS storeLabels,
            ss.collection_num,
            (
                SELECT SUM(mi1.liked_num)
                FROM mm_information mi1
                WHERE mi1.store_id = ss.id
            ) AS likedSum,
            (EXISTS
                (SELECT 1
                FROM um_user_favorites uuf
                WHERE uuf.favorites_id = ss.id
                AND uuf.`type` = '店铺'
                AND uuf.user_id = #{userId}
                AND uuf.is_favorites = 1
                AND uuf.del_flag = 0)
            ) AS is_focus,
            (EXISTS
                (SELECT 1
                FROM mm_information_comment mic
                WHERE mic.info_id = mi.id
                AND mic.user_id = #{userId}
                )
            ) as isComment,
            (EXISTS
                (SELECT 1
                FROM mm_information_liked mil
                WHERE mil.info_id = mi.id
                AND mil.user_id = #{userId}
                AND mil.del_flag = 0
                )
            ) as isLiked,
            (EXISTS
                (SELECT 1
                FROM mm_information_forward mif
                WHERE mif.info_id = mi.id
                AND mif.user_id = #{userId}
                )
            ) as isForward
        from mm_information mi
        LEFT JOIN sm_store ss
        ON mi.`store_id` = ss.id
        <if test="informationType != null and informationType == 2">
            left join um_user_favorites uuf on mi.store_id = uuf.favorites_id
        </if>
        <where>
            mi.del_flag = 0 and mi.enabled = 1
            <if test="informationType != null and informationType == 2">
                and uuf.del_flag = 0 and uuf.user_id = #{userId}
                AND uuf.is_favorites = 1
            </if>
            <if test="infoCategoryId != null and infoCategoryId !=0">
                and mi.info_category_id = #{infoCategoryId}
            </if>
            <if test="(null != labelIds and labelIds.size() > 0)">
                AND mi.info_label_id IN
                <foreach item="item" collection="labelIds" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="(null != categoryIds and categoryIds.size() > 0)">
                AND mi.info_category_id IN
                <foreach item="item" collection="categoryIds" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="keyword != null and keyword !=''">
                and (mi.title  like concat('%', #{keyword}, '%') or mi.pure_text  like concat('%', #{keyword}, '%'))
            </if>
        </where>
        GROUP BY mi.id,ss.id
        order by mi.update_time desc
    </select>
    <select id="selectRelGoodsIdsById" resultType="java.lang.Long">
        select mirg.goods_id
        from mm_information_rel_goods mirg
        where mirg.information_id = #{id}
        and mirg.del_flag = 0
    </select>
    <select id="searchInformationList"
            resultType="com.chauncy.data.vo.app.message.information.InformationPagingVo">
        select
            mi.id,
            mi.title,
            LEFT(mi.pure_text,100) AS pureText ,
            mi.`cover_image`,
            mi.`forward_num`,
            mi.`comment_num`,
            mi.`liked_num`,
            mi.update_time,
            (EXISTS
                (SELECT 1
                FROM mm_information_comment mic
                WHERE mic.info_id = mi.id
                AND mic.user_id = #{userId}
                )
            ) as isComment,
            (EXISTS
                (SELECT 1
                FROM mm_information_liked mil
                WHERE mil.info_id = mi.id
                AND mil.user_id = #{userId}
                AND mil.del_flag = 0
                )
            ) as isLiked,
            (EXISTS
                (SELECT 1
                FROM mm_information_forward mif
                WHERE mif.info_id = mi.id
                AND mif.user_id = #{userId}
                )
            ) as isForward
        from mm_information mi
        <where>
            mi.del_flag = 0 and mi.enabled = 1
            <if test="storeId !=null and storeId !=0 ">
                and mi.store_id = #{storeId}
            </if>
        </where>
        order by mi.update_time desc
    </select>

    <resultMap id="screenInfoParamResult" type="com.chauncy.data.vo.app.component.ScreenInfoParamVo">
        <id column="id" property="id" />
        <!-- collection定义关联集合类型的属性封装规则
        offType:指定集合中的元素类型
        -->
        <collection property="categoryList" ofType="com.chauncy.data.vo.BaseVo">
            <id column="categoryId" property="id"/>
            <result column="categoryName" property="name"/>
        </collection>
        <collection property="labelList" ofType="com.chauncy.data.vo.BaseVo">
            <id column="labelId" property="id"/>
            <result column="labelName" property="name"/>
        </collection>
    </resultMap>
    <select id="findScreenInfoParam" resultMap="screenInfoParamResult">
        SELECT
            '1' AS id,
            mic.id AS categoryId,
            mic.`name` AS categoryName,
            mil.id AS labelId,
            mil.name AS labelName
        FROM
            (
                SELECT
                    mi.id,
                    mi.info_label_id,
                    mi.info_category_id
                FROM mm_information mi
                <if test="informationType != null and informationType == 2">
                    LEFT JOIN um_user_favorites uuf
                    ON mi.store_id = uuf.favorites_id
                </if>
                <where>
                    mi.del_flag = 0
                    AND mi.enabled = 1
                    <if test="informationType != null and informationType == 2">
                        AND uuf.del_flag = 0
                        AND uuf.user_id = #{userId}
                        AND uuf.is_favorites = 1
                    </if>
                    <if test="infoCategoryId != null and infoCategoryId !=0">
                        AND mi.info_category_id = #{infoCategoryId}
                    </if>
                    <if test="keyword != null and keyword !=''">
                        AND (mi.title  LIKE concat('%', #{keyword}, '%') OR mi.pure_text LIKE concat('%', #{keyword}, '%'))
                    </if>
                </where>
            ) temp
            LEFT JOIN mm_information_label mil ON temp.info_label_id = mil.`id`
            LEFT JOIN mm_information_category mic ON temp.info_category_id = mic.`id`
            <!-- 根据前面的资讯获取 <where>
                AND mil.enabled = 1
                AND mil.`enabled` = 1
            </where> -->
    </select>

    <select id="getFocusInfoSum" resultType="java.lang.Integer">
        SELECT  COUNT(1)
        FROM mm_information mi
        LEFT JOIN sm_store ss
        ON mi.`store_id` = ss.id
        LEFT JOIN um_user_favorites uuf
        ON mi.store_id = uuf.favorites_id
        <where>
            mi.del_flag = 0
            AND mi.enabled = 1
            AND uuf.del_flag = 0
            AND uuf.user_id = #{userId}
            AND uuf.is_favorites = 1
            AND mi.update_time <![CDATA[>= ]]> #{readTime}
        </where>
    </select>

</mapper>
