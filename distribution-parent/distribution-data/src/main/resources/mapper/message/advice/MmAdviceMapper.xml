<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chauncy.data.mapper.message.advice.MmAdviceMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chauncy.data.domain.po.message.advice.MmAdvicePo">
        <id column="id" property="id" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
        <result column="del_flag" property="delFlag" />
        <result column="location" property="location" />
        <result column="name" property="name" />
        <result column="picture" property="picture" />
        <result column="enabled" property="enabled" />
    </resultMap>

    <!-- app首页获取广告信息结果 -->
    <resultMap id="AdviceResultMap" type="com.chauncy.data.vo.app.advice.home.GetAdviceInfoVo">
        <id column="advice_id" property="adviceId" />
        <result column="advice_name" property="adviceName" />
        <result column="advice_picture" property="advicePicture" />
        <result column="location" property="location" />
        <collection property="shufflingVoList" ofType="com.chauncy.data.vo.app.advice.home.ShufflingVo">
            <result column="shuffling_id" property="shufflingId" />
            <result column="cover_photo" property="coverPhoto" />
            <result column="advice_type" property="adviceType" />
            <result column="detail_id" property="detailId" />
            <result column="html_detail" property="htmlDetail" />
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, create_by, create_time, update_by, update_time, del_flag, location, name, picture, enabled
    </sql>

    <select id="searchAdvices" resultType="com.chauncy.data.vo.manage.message.advice.SearchAdvicesVo">
        select id as advice_id,name,location,enabled,picture
        from mm_advice
        where del_flag = 0
        <if test="enabled != null">
            and enabled = #{enabled}
        </if>
        <if test="name !=null and name!=''">
            and a.name like concat('%', #{name}, '%')
        </if>
    </select>
    <select id="findAdvice" resultType="com.chauncy.data.vo.manage.message.advice.FindBaiHuoAdviceVo">
        select id as value,name as label
        from mm_advice
        where del_flag = 0 and location = #{location}
    </select>

    <select id="getAdviceInfo" resultMap="AdviceResultMap">
        select a.id as advice_id,a.name as advice_name,a.picture as advice_picture,a.location,b.id as shuffling_id,b.cover_photo,
        b.advice_type,b.detail_id,b.html_detail
        from mm_advice a
        left join mm_advice_rel_shuffling b on a.id = b.advice_id and b.del_flag = 0 and b.rel_tab_brand_id is null and b.rel_category_id is null
        where a.del_flag = 0 and a.enabled = 1 and a.location not in ("YOUPIN_INSIDE_SHUFFLING","YOUDIAN_INSIDE_SHUFFLING","SALE_INSIDE_SHUFFLING",
	"YOUXUAN_INSIDE_SHUFFLING","BAIHUO_INSIDE_SHUFFLING","information_recommended","PERSONAL_CENTER","FIRST_CATEGORY_DETAIL");
    </select>

    <select id="getShuffling" resultType="com.chauncy.data.vo.app.advice.home.ShufflingVo">
        select b.id as shuffling_id,b.cover_photo,b.advice_type,b.detail_id,b.html_detail
        from mm_advice a,mm_advice_rel_shuffling b
        where a.del_flag = 0 and a.enabled = 1 and a.id = b.advice_id and a.location = #{location}
        and b.start_time &lt;= now() and b.end_time &gt;= now()

    </select>

    <select id="getTab" resultType="com.chauncy.data.vo.BaseVo">
        select a.id,a.name
        from mm_advice_tab a,mm_advice_rel_tab b
        where a.del_flag = 0 and b.del_flag = 0 and a.id = b.tab_id and b.advice_id = #{adviceId}
    </select>

    <select id="searchGoodsBase" resultType="com.chauncy.data.vo.app.advice.goods.SearchGoodsBaseVo">
        select b.id as goods_id,b.icon as picture,b.name as goods_name,b.sales_volume,max(c.line_price) as line_price,MIN(c.sell_price) as sell_price
        from mm_advice_rel_tab_things a,pm_goods b,pm_goods_sku c
        where a.del_flag = 0 and b.del_flag = 0 and c.del_flag = 0 and
        a.tab_id = #{tabId} and a.association_id = b.id and b.id = c.goods_id
        group by b.id
    </select>
    <select id="getLabelNames" resultType="java.lang.String">
        select e.name as label_name
        from pm_goods a,pm_goods_rel_attribute_good d,pm_goods_attribute e
        where a.id = #{goodsId} and a.id = d.goods_good_id and d.goods_attribute_id = e.id and
        e.type = 5 and a.del_flag = 0 and d.del_flag = 0 and  e.del_flag = 0
    </select>
    <select id="searchBrandBase" resultType="com.chauncy.data.vo.app.advice.goods.SearchBrandAndSkuBaseVo">
        select b.id as brand_id,b.name as brand_name,b.logo_image as brand_logo,b.subtitle,b.collection_num
        from mm_advice_rel_tab_things a,pm_goods_attribute b
        where a.tab_id = #{tabId} and a.association_id = b.id and a.del_flag =0 and b.del_flag = 0
    </select>
    <select id="searchBrandGoodsBaseList" resultType="com.chauncy.data.vo.app.advice.goods.SearchGoodsBaseListVo">
        select a.name as condition_name,b.id as goods_id,b.name as goods_name,b.icon as picture,b.activity_cost_rate,
        b.profits_rate,b.sales_volume,d.sell_price as sell_price,d.line_price,b.forward_num,b.collection_num
        from pm_goods_attribute a,pm_goods b,pm_goods_rel_attribute_good c,pm_goods_sku	d
        where a.del_flag = 0 and b.del_flag = 0 and c.del_flag =0 and d.del_flag =0 and a.id = #{conditionId}
        and c.goods_attribute_id = a.id and c.goods_good_id = b.id and d.goods_id = b.id
        and d.id = (SELECT id from pm_goods_sku d2 where d2.`goods_id` = b.id  and d2.del_flag =0 and d2.sell_price =
        (SELECT Min(d1.sell_price) FROM pm_goods_sku d1 WHERE d1.`goods_id` = b.id  and d1.del_flag =0 LIMIT 1) limit 1)
        <if test="lowestPrice !=null ">
            and sell_price &gt;= #{lowestPrice}
        </if>
        <if test="highestPrice !=null ">
            and sell_price &lt;= #{highestPrice}
        </if>
        <!--group by b.id
        having 1=1
        <if test="lowestPrice !=null ">
          and minPrice &gt;= #{lowestPrice}
        </if>
        <if test="highestPrice !=null ">
            and minPrice &lt;= #{highestPrice}
        </if>-->
        <if test="sortFile.name() == 'PRICE_SORT' ">
            order by sell_price ${sortWay.name}
        </if>
        <if test="sortFile.name() == 'COMPREHENSIVE_SORT'">
            order by b.sales_volume ${sortWay.name}
        </if>
        <if test="sortFile.name() == 'SALES_SORT'">
            order by b.sales_volume ${sortWay.name}
        </if>
        <if test="sortFile.name() == 'COLLECTION_NUM'">
            order by b.collection_num ${sortWay.name}
        </if>
    </select>
    <select id="searchTabGoodsBaseList"
            resultType="com.chauncy.data.vo.app.advice.goods.SearchGoodsBaseListVo">
        select c.name as condition_name,b.id as goods_id,b.name as goods_name,b.icon as picture,b.activity_cost_rate,
        b.profits_rate,b.sales_volume,d.sell_price as sell_price,d.line_price,b.forward_num,b.collection_num
        from mm_advice_rel_tab_things a,pm_goods b,pm_goods_sku	d,mm_advice_tab c
        where a.del_flag = 0 and b.del_flag = 0 and c.del_flag =0 and d.del_flag =0 and a.tab_id = #{conditionId}
        and a.association_id	= b.id and d.goods_id=b.id and c.id = a.tab_id
        and d.id = (SELECT id from pm_goods_sku d2 where d2.`goods_id` = b.id  and d2.del_flag =0 and d2.sell_price =
        (SELECT Min(d1.sell_price) FROM pm_goods_sku d1 WHERE d1.`goods_id` = b.id  and d1.del_flag =0 LIMIT 1) limit 1)
        <if test="lowestPrice !=null ">
            and sell_price &gt;= #{lowestPrice}
        </if>
        <if test="highestPrice !=null ">
            and sell_price &lt;= #{highestPrice}
        </if>
        <if test="sortFile.name() == 'PRICE_SORT' ">
            order by sell_price ${sortWay.name}
        </if>
        <if test="sortFile.name() == 'COMPREHENSIVE_SORT'">
            order by b.sales_volume ${sortWay.name}
        </if>
        <if test="sortFile.name() == 'SALES_SORT'">
            order by b.sales_volume ${sortWay.name}
        </if>
        <if test="sortFile.name() == 'COLLECTION_NUM'">
            order by b.collection_num ${sortWay.name}
        </if>
    </select>
</mapper>
