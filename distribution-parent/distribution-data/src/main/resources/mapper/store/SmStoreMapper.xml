<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chauncy.data.mapper.store.SmStoreMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chauncy.data.domain.po.store.SmStorePo">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="store_describe" property="storeDescribe" />
        <result column="user_name" property="userName" />
        <result column="show_status" property="showStatus" />
        <result column="store_category_id" property="storeCategoryId" />
        <result column="type" property="type" />
        <result column="parent_id" property="parentId" />
        <result column="sort" property="sort" />
        <result column="owner_name" property="ownerName" />
        <result column="owner_mobile" property="ownerMobile" />
        <result column="logo_image" property="logoImage" />
        <result column="store_image" property="storeImage" />
        <result column="background_image" property="backgroundImage" />
        <result column="company_name" property="companyName" />
        <result column="company_addr" property="companyAddr" />
        <result column="company_mobile" property="companyMobile" />
        <result column="company_email" property="companyEmail" />
        <result column="legal_person" property="legalPerson" />
        <result column="tax_number" property="taxNumber" />
        <result column="cardholder" property="cardholder" />
        <result column="opening_bank" property="openingBank" />
        <result column="account" property="account" />
        <result column="bank_reserve_mobile" property="bankReserveMobile" />
        <result column="payment_bill_settlement_cycle" property="paymentBillSettlementCycle" />
        <result column="income_bill_Settlement_cycle" property="incomeBillSettlementCycle" />
        <result column="income_rate" property="incomeRate" />
        <result column="business_license" property="businessLicense" />
        <result column="enabled" property="enabled" />
        <result column="total_score" property="totalScore" />
        <result column="baby_describe_score" property="babyDescribeScore" />
        <result column="service_attitude_score" property="serviceAttitudeScore" />
        <result column="store_turnover" property="storeTurnover" />
        <result column="store_member_num" property="storeMemberNum" />
        <result column="store_sub_num" property="storeSubNum" />
        <result column="collection_num" property="collectionNum" />
        <result column="logistics_service_score" property="logisticsServiceScore" />
        <result column="logistics_service_score" property="logisticsServiceScore" />
        <result column="create_by" property="createBy" />
        <result column="create_time" property="createTime" />
        <result column="update_by" property="updateBy" />
        <result column="update_time" property="updateTime" />
        <result column="del_flag" property="delFlag" />
    </resultMap>


    <select id="getTeamWorkCondition" resultType="java.lang.Integer">
        SELECT COUNT(1) + 1  AS num FROM (
            WITH RECURSIVE parentIds (store_id,parent_id) AS
            (
                SELECT ssrs.store_id, ssrs.parent_id
                FROM  sm_store_rel_store ssrs
                WHERE ssrs.store_id = #{parentId}
                AND ssrs.del_flag = 0
                AND ssrs.type = 2
                UNION ALL
                SELECT ssrs1.store_id, ssrs1.parent_id
                FROM parentIds AS p INNER JOIN  sm_store_rel_store ssrs1
                ON p.parent_id = ssrs1.store_id
                WHERE ssrs1.del_flag = 0
                AND ssrs1.type = 2
            )
            SELECT DISTINCT store_id, parent_id FROM parentIds
        ) AS temp
        UNION ALL
        SELECT EXISTS (
            SELECT ssrs.id
            FROM sm_store_rel_store ssrs
            WHERE ssrs.store_id = #{storeId}
            AND ssrs.del_flag = 0
            AND ssrs.type = 2
        )
        UNION ALL
        SELECT EXISTS (
            SELECT ssrs.id
            FROM sm_store_rel_store ssrs
            WHERE ssrs.parent_id = #{parentId}
            AND ssrs.del_flag = 0
            AND ssrs.type = 2
        )
    </select>

    <select id="getProductAgentCondition" resultType="java.lang.Boolean">
        SELECT EXISTS
        (
            WITH RECURSIVE childrenIds (store_id,parent_id) AS
            (
                SELECT ssrs.store_id, ssrs.parent_id
                FROM  sm_store_rel_store ssrs
                WHERE ssrs.parent_id = #{storeId}
                AND ssrs.del_flag=0
                AND ssrs.type = 1
                UNION ALL
                SELECT ssrs1.store_id, ssrs1.parent_id
                FROM childrenIds AS c LEFT JOIN  sm_store_rel_store ssrs1
                ON c.store_id = ssrs1.parent_id
                WHERE ssrs1.del_flag=0 AND ssrs1.type = 1
                )
                SELECT DISTINCT store_id FROM childrenIds WHERE store_id = #{parentId}) AS productAgentCondition
    </select>

    <sql id="selectSmStoreBaseVo">
         ss.id, ss.`name`, ss.`type`, (case when ss.`type`=1 then '推广店铺' when ss.`type`=2 then '商品店铺' end) as typeName,
          ss.parent_id, ss.store_turnover, ss.store_member_num, ss.store_sub_num, ss.goods_num, ss.owner_mobile, ss.sort, ss.enabled
    </sql>

    <sql id="selectSmStoreBaseInfo">
         ss.id, ss.`name`, ss.`type`, (case when ss.`type`=1 then '推广店铺' when ss.`type`=2 then '商品店铺' end) as typeName,
          ss.store_describe, ss.user_name, ss.show_status, ss.store_category_id, ss.parent_id, ss.sort, ss.owner_name,
          ss.owner_mobile, ss.logo_image, ss.store_image, ss.background_image, ss.total_score, ss.baby_describe_score,
          ss.service_attitude_score, ss.logistics_service_score,
          (select ssc.`name` from sm_store_category ssc where ssc.id = ss.store_category_id) as store_category_name

    </sql>


    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, store_describe, user_name, show_status, store_type_label_id, store_attribute_id, type, parent_id, sort, owner_name, owner_mobile, logo_image, store_image, background_image, company_name, company_addr, company_mobile, company_email, legal_person, tax_number, cardholder, opening_bank, account, bank_reserve_mobile, payment_bill_settlement_cycle, income_bill_Settlement_cycle, income_rate, business_license, enabled, total_score, baby_describe_score, service_attitude_score, logistics_service_score
    </sql>


    <update id="editStoreStatus">
        update sm_store
        set enabled = #{enabled}
        where id in
        <foreach collection="id" item="id" index="index"
                 open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="searchBaseInfo" resultType="com.chauncy.data.vo.manage.store.SmStoreBaseVo">
        select id, `name`, `type`, (case when `type`=1 then '商品店铺' when `type`=2 then '推广店铺' end) as typeName, parent_id,
        store_turnover, store_member_num, store_sub_num, goods_num, owner_mobile, sort, enabled, company_addr
        from sm_store
        <where>
            del_flag = 0
            <if test="id !=null and id !=''">
                and id = #{id}
            </if>
            <if test="mobile != null and mobile !=''">
                and owner_mobile = #{mobile}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="type != null ">
                and type = #{type}
            </if>
            <if test="name != null and name !=''">
                and name like concat('%', #{name}, '%')
            </if>
        </where>
    </select>



    <resultMap id="storeBaseResult" type="com.chauncy.data.vo.manage.store.StoreBaseInfoVo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="type" property="type"/>
        <result column="typeName" property="typeName"/>
        <result column="store_describe" property="storeDescribe"/>
        <result column="user_name" property="userName"/>
        <result column="show_status" property="showStatus"/>
        <result column="store_category_id" property="storeCategoryId"/>
        <result column="store_category_name" property="storeCategoryName"/>
        <result column="parent_id" property="parentId"/>
        <result column="sort" property="sort"/>
        <result column="owner_name" property="ownerName"/>
        <result column="owner_mobile" property="ownerMobile"/>
        <result column="logo_image" property="logoImage"/>
        <result column="store_image" property="storeImage"/>
        <result column="background_image" property="backgroundImage"/>
        <result column="total_score" property="totalScore"/>
        <result column="baby_describe_score" property="babyDescribeScore"/>
        <result column="service_attitude_score" property="serviceAttitudeScore"/>
        <result column="logistics_service_score" property="logisticsServiceScore"/>
        <!-- collection定义关联集合类型的属性封装规则
        offType:指定集合中的元素类型
        -->
        <collection property="pmGoodsBrandVoList" ofType="com.chauncy.data.vo.manage.product.PmGoodsBrandVo">
            <id column="attributeId" property="id"/>
            <result column="attributeName" property="name"/>
        </collection>
        <collection property="smStoreLabelVoList" ofType="com.chauncy.data.vo.manage.product.PmGoodsBrandVo">
            <result column="storeLabelId" property="id"/>
            <result column="storeLabelName" property="name"/>
        </collection>
        <collection property="smRelStoreVoList" column="id"
                    select="com.chauncy.data.mapper.store.SmStoreMapper.findBindingStore">
        </collection>
    </resultMap>
    <select id="findBaseById" resultMap="storeBaseResult">
        select <include refid="selectSmStoreBaseInfo"/>,
            pga.id as attributeId,
            pga.name as attributeName,
            ssl.id as storeLabelId,
            ssl.name as storeLabelName
        from sm_store ss
        left join sm_store_rel_attribute srsa
        on ss.id = srsa.store_id
        left join pm_goods_attribute pga
        on srsa.attribute_id = pga.id   AND srsa.del_flag = 0
        left join sm_store_rel_label ssrl
        on ssrl.store_id = ss.id  AND  pga.type = 8
        left join sm_store_label `ssl`
        on ssl.id = ssrl.store_label_id AND ssrl.del_flag = 0
        <where>
            <if test="id !=null and id !=''">
                and ss.id = #{id}
            </if>
        </where>
    </select>

    <select id="findBindingStore" resultType="com.chauncy.data.vo.manage.store.rel.SmRelStoreVo">
        select (case when ssrs.`type`=1 then '产品代理' when ssrs.`type`=2 then '团队合作' end) as typeName,
                ssrs.`type` as typeId,
                ssrs.id,
                ss.name as storeName,
                ss.id as storeId
        from sm_store_rel_store ssrs inner join sm_store ss on ss.id = ssrs.parent_id
        <where>
            ssrs.del_flag = 0 and ss.del_flag = 0 and ssrs.store_id = #{id}
        </where>
    </select>



    <select id="findAccountById" resultType="com.chauncy.data.vo.manage.store.StoreAccountInfoVo">
        select ss.*
        from sm_store ss
        <where>
            del_flag = 0
            <if test="id !=null and id !=''">
                and ss.id = #{id}
            </if>
        </where>
    </select>

    <select id="findStoreIdByName" resultType="Long">
        select id
        from sm_store
        where del_flag = 0 and user_name = #{userName}
    </select>


    <select id="selectAttributeIdsById" resultType="Long">
        select DISTINCT pga.id
        from pm_goods pg, pm_goods_rel_attribute_good pgrag,pm_goods_attribute pga
        where pg.id = pgrag.goods_good_id and pga.id = pgrag.goods_attribute_id
        and pga.`type` = 8 and pg.store_id = #{id} and pg.del_flag = 0 and pgrag.del_flag = 0 and pga.del_flag = 0
    </select>

    <select id="selectRelAttributeIds" resultType="Long">
        select DISTINCT ssra.id
        from sm_store_rel_attribute ssra, pm_goods_attribute pga
        where ssra.store_id = #{id} and ssra.attribute_id = pga.id and ssra.del_flag = pga.del_flag = 0
    </select>

    <select id="selectLabelIdsById" resultType="Long">
        SELECT ssrl.id
        FROM sm_store ss, sm_store_rel_label ssrl
        WHERE ss.id = ssrl.store_id
        AND ssrl.store_id = #{id} and ssrl.del_flag = 0
    </select>

    <select id="searchRelStoreInfo" resultType="com.chauncy.data.vo.manage.store.RelStoreInfoVo">
        select id, `name`, `company_name`
        from sm_store
        <where>
            <if test="id !=null and id !=''">
                and id = #{id}
            </if>
            <if test="name != null and name !=''">
                and name like concat('%', #{name}, '%')
            </if>
        </where>
    </select>

    <select id="searchBranchByName" resultType="com.chauncy.data.vo.supplier.store.BranchInfoVo">
        select ss.id, ss.`name`, ss.`company_name`,  ss.company_addr, ss.company_mobile
        from sm_store_rel_store ssrs left join sm_store ss
        on ssrs.store_id = ss.id
        <where>
            ssrs.parent_id = #{storeId}
            <if test="storeName != null and storeName !=''">
                and ss.`name` like concat('%', #{storeName}, '%')
            </if>
        </where>
    </select>


    <resultMap id="appStoreBaseResult" type="com.chauncy.data.vo.app.store.StorePagingVo">
        <id column="storeId" property="storeId"/>
        <result column="storeName" property="storeName"/>
        <result column="logo_image" property="logoImage"/>
        <result column="background_image" property="backgroundImage"/>
        <result column="store_describe" property="storeDescribe"/>
        <result column="collection_num" property="collectionNum"/>
        <result column="storeDescribe" property="storeDescribe"/>
        <!-- collection定义关联集合类型的属性封装规则
        offType:指定集合中的元素类型
        -->
        <collection property="goodsBaseInfoVoList" ofType="com.chauncy.data.vo.app.goods.GoodsBaseInfoVo">
            <result column="goodsId" property="goodsId"/>
            <result column="goodsName" property="goodsName"/>
            <result column="sellPrice" property="sellPrice"/>
            <result column="linePrice" property="linePrice"/>
            <result column="icon" property="icon"/>
        </collection>
    </resultMap>
    <select id="searchPaging"  resultMap="appStoreBaseResult">
        select ss.id as storeId, ss.`name` as storeName, ss.logo_image, ss.background_image,
                ss.collection_num, ss.store_describe, goods.goodsId, goods.goodsName,
                goods.sellPrice, goods.linePrice, goods.icon
        from sm_store ss
        left join (
            select pg.store_id, pg.id as goodsId, pg.`name` as goodsName, min(pgs.sell_price) as sellPrice,
                    min(pgs.line_price) as linePrice, pg.icon
            from pm_goods pg left join pm_goods_sku pgs on pgs.goods_id = pg.id
            where pg.del_flag = 0 and pgs.del_flag = 0
            group by pg.id
            order by pg.sort desc
            limit ${goodsNum}
        ) as goods
        on ss.id = goods.store_id
        <where>
            ss.enabled = 1 and ss.del_flag = 0
            <if test="storeCategoryId != null">
                and ss.store_category_id = #{storeCategoryId}
            </if>
            <if test="keyword != null and keyword !=''">
                and ss.`name` like concat('%', #{keyword}, '%')
            </if>
        </where>
        order by ss.sort desc
    </select>
    <select id="findStoreById" resultType="com.chauncy.data.vo.app.store.StorePagingVo">
        select ss.id as storeId, ss.`name` as storeName, ss.logo_image, ss.background_image,
                ss.collection_num, ss.store_describe
        from sm_store ss
        where ss.id = #{storeId}
    </select>


    <select id="findDetailById" resultType="com.chauncy.data.vo.app.store.StoreDetailVo">
        select ss.id as storeId,
                ss.name as storeName,
                ss.logo_image,
                ss.collection_num,
                 (
                    SELECT SUM(mi1.liked_num)
                    FROM mm_information mi1
                    WHERE mi1.store_id = ss.id
                ) AS likedSum,
                 (EXISTS
                    (SELECT 1
                    FROM um_user_favorites uuf
                    WHERE uuf.favorites_id = ss.id
                    AND uuf.`type` = '店铺'
                    AND uuf.user_id = #{userId}
                    AND uuf.is_favorites = 1
                    AND uuf.del_flag = 0)
                ) AS is_focus,
                ss.store_describe,
                oeq.description_start_level AS baby_describe_score,
                oeq.description_start_level AS attitude_start_level,
                oeq.description_start_level AS ship_start_level,
                ss.owner_name,
                ss.company_addr,
                DATE(ss.create_time) as createDate,
                ss.business_license,
                (
                    SELECT GROUP_CONCAT(`ssl`.name)
                    FROM sm_store_label `ssl` ,sm_store_rel_label ssrl
                    WHERE `ssrl`.store_label_id = `ssl`.id
                    AND `ssrl`.store_id = ss.`id`
                    AND `ssl`.del_flag = 0
                ) AS storeLabels
        from sm_store ss
        left join om_evaluate_quartz oeq
        on ss.id = oeq.store_id
        where ss.id = #{storeId}
    </select>
    <select id="findOperationalById" resultType="com.chauncy.data.vo.manage.store.StoreOperationalInfoVo">
        SELECT ss.id,
            ss.enabled,
            ss.store_member_num,
            ss.goods_num,
            ss.store_turnover,
            ss.order_num
        FROM sm_store ss
        WHERE ss.id = #{id}
    </select>

    <select id="searchStores" resultType="com.chauncy.data.vo.BaseVo">
        select id,name
        from sm_store
        where del_flag = 0 and enabled =1 and store_category_id = #{classificationId}
        <if test="associatedIds != null">
            and id not in
            <foreach item="item" collection="associatedIds" separator="," open="(" close=")" index="">  #{item}
            </foreach>
        </if>
        <if test="name!=null and name!=''">
            and name like concat('%', #{name}, '%')
        </if>
    </select>

    <select id="getEnabledStoreById" resultType="com.chauncy.data.domain.po.store.SmStorePo">
        select * from sm_store where id = #{id} and del_flag = 0 and enabled = 1
    </select>

    <resultMap id="StoreCategoryDetailResult" type="com.chauncy.data.vo.app.advice.store.StoreCategoryDetailVo">
        <id column="storeId" property="storeId"/>
        <result column="logoImage" property="logoImage"/>
        <result column="storeName" property="storeName"/>
        <result column="storeDescribe" property="storeDescribe"/>
        <result column="is_focus" property="isFocus"/>
        <result column="storeLabels" property="storeLabels"/>
        <!--collection定义关联集合类型的属性封装规则
        延迟加载 传递两个参数
　　　　{pMenuId=child_pid,userId=userId}
　　　　 传递查询参数名称=字段名称-->
        <collection property="goodsBaseInfoVoList" column="{storeId=storeId}"
                    select="com.chauncy.data.mapper.product.PmGoodsMapper.findRecommandGoods">
        </collection>
    </resultMap>
    <select id="searchStoreBaseList"   resultMap="StoreCategoryDetailResult">
        SELECT
            DISTINCT `ss`.id AS storeId,
            `ss`.logo_image AS logoImage,
            `ss`.name AS storeName,
            `ss`.store_describe AS storeDescribe,
            (EXISTS
                (SELECT 1
                    FROM um_user_favorites uuf
                    WHERE uuf.favorites_id = ss.id
                    AND uuf.`type` = '店铺'
                    AND uuf.user_id = #{userId}
                    AND uuf.is_favorites = 1
                    AND uuf.del_flag = 0)
                ) AS is_focus,
            GROUP_CONCAT(`ssl`.name) AS storeLabels
        FROM
            sm_store `ss`
            LEFT JOIN sm_store_category `ssc` ON ss.store_category_id = ssc.id AND `ssc`.del_flag = 0
            LEFT JOIN sm_store_rel_label ssrl ON ss.id = ssrl.store_id AND `ssrl`.del_flag = 0
            LEFT JOIN sm_store_label `ssl` ON ssrl.store_label_id = `ssl`.id AND `ssrl`.del_flag = 0
        <where>
            `ss`.enabled = 1
            <if test="(null != labelIds and labelIds.size() > 0)">
                AND `ssl`.id IN
                <foreach item="item" collection="labelIds" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="(null != categoryIds and categoryIds.size() > 0)">
                AND ss.store_category_id IN
                <foreach item="item" collection="categoryIds" separator="," open="(" close=")" index="">
                    #{item}
                </foreach>
            </if>
            <if test="keyword != null and keyword !=''">
                and name like concat('%', #{keyword}, '%')
            </if>
        </where>
        GROUP BY `ss`.id
        ORDER BY `ss`.sort DESC
    </select>

    <resultMap id="screenStoreParamResult" type="com.chauncy.data.vo.app.component.ScreenStoreParamVo">
        <id column="id" property="id" />
        <!-- collection定义关联集合类型的属性封装规则
        offType:指定集合中的元素类型
        -->
        <collection property="categoryList" ofType="com.chauncy.data.vo.BaseVo">
            <id column="categoryId" property="id"/>
            <result column="categoryName" property="name"/>
        </collection>
        <collection property="labelList" ofType="com.chauncy.data.vo.BaseVo">
            <id column="labelId" property="id"/>
            <result column="labelName" property="name"/>
        </collection>
    </resultMap>
    <select id="findScreenStoreParam" resultMap="screenStoreParamResult">
        SELECT
            '1'   AS id,
            ssc.id AS categoryId,
            ssc.name AS categoryName,
            `ssl`.id AS labelId,
            `ssl`.`name` AS labelName
        FROM sm_store `ss`
        LEFT JOIN sm_store_category `ssc` ON ss.store_category_id = ssc.id  AND `ssc`.del_flag = 0
        LEFT JOIN sm_store_rel_label ssrl ON ss.id = ssrl.store_id  AND `ssrl`.del_flag = 0
        LEFT JOIN sm_store_label `ssl` ON ssrl.store_label_id = `ssl`.id  AND `ssl`.`del_flag` = 0
        <where>
            `ss`.enabled = 1
            <if test="keyword != null and keyword !=''">
                and name like concat('%', #{keyword}, '%')
            </if>
        </where>
    </select>

    <resultMap id="storeHomePageResult" type="com.chauncy.data.vo.app.advice.store.StoreHomePageVo">
        <id column="id" property="storeId" />
        <result column="logo_image" property="logoImage" />
        <result column="name" property="storeName" />
        <result column="storeLabels" property="storeLabels" />
        <result column="is_focus" property="isFocus" />
        <result column="store_describe" property="storeDescribe" />
        <result column="likedSum" property="likedSum" />
        <result column="collectionNum" property="collectionNum" />
        <result column="background_image" property="backgroundImage" />
        <!-- collection定义关联集合类型的属性封装规则
        offType:指定集合中的元素类型
        -->
        <collection property="starGoodsVoList" ofType="com.chauncy.data.vo.app.advice.goods.StarGoodsVo">
            <id column="goodsId" property="goodsId"/>
            <result column="goodsIcon" property="goodsIcon"/>
        </collection>
    </resultMap>
    <select id="getStoreHomePage" resultMap="storeHomePageResult">
        SELECT
            ss.`id`,
            ss.`logo_image`,
            ss.`name`,
            ss.`store_describe`,
            ss.`background_image`,
            (
                SELECT GROUP_CONCAT(`ssl`.name)
                FROM sm_store_label `ssl` ,sm_store_rel_label ssrl
                WHERE `ssrl`.store_label_id = `ssl`.id
                AND `ssrl`.store_id = ss.`id`
                AND `ssl`.del_flag = 0
            ) AS storeLabels,
            (EXISTS
                (SELECT 1
                FROM um_user_favorites uuf
                WHERE uuf.favorites_id = ss.id
                AND uuf.`type` = '店铺'
                AND uuf.user_id = #{userId}
                AND uuf.is_favorites = 1
                AND uuf.del_flag = 0)
            ) AS is_focus,
            ss.collection_num,
            (
                SELECT sum(mi1.liked_num)
                FROM mm_information mi1
                WHERE mi1.store_id = ss.id
            ) AS likedSum,
            `pg`.icon AS goodsIcon,
            `pg`.id AS goodsId
        FROM sm_store ss LEFT JOIN pm_goods `pg`
        ON ss.id = `pg`.store_id
        AND `pg`.del_flag = 0
        AND pg.publish_status = 1
        AND pg.star_status = 1
        WHERE  ss.id = #{storeId}
    </select>

</mapper>
